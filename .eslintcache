[{"C:\\Users\\User\\VSCodeProjects\\github_jobs\\github_jobs\\src\\index.js":"1","C:\\Users\\User\\VSCodeProjects\\github_jobs\\github_jobs\\src\\App.js":"2","C:\\Users\\User\\VSCodeProjects\\github_jobs\\github_jobs\\src\\components\\JobsPagination.js":"3","C:\\Users\\User\\VSCodeProjects\\github_jobs\\github_jobs\\src\\components\\useFetchJobs.js":"4","C:\\Users\\User\\VSCodeProjects\\github_jobs\\github_jobs\\src\\components\\Jobs.js":"5"},{"size":221,"mtime":1610017064592,"results":"6","hashOfConfig":"7"},{"size":3124,"mtime":1610276366312,"results":"8","hashOfConfig":"7"},{"size":850,"mtime":1610040555883,"results":"9","hashOfConfig":"7"},{"size":2025,"mtime":1610282953974,"results":"10","hashOfConfig":"7"},{"size":1683,"mtime":1610026990291,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1bo611g",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"14"},"C:\\Users\\User\\VSCodeProjects\\github_jobs\\github_jobs\\src\\index.js",[],["25","26"],"C:\\Users\\User\\VSCodeProjects\\github_jobs\\github_jobs\\src\\App.js",[],"C:\\Users\\User\\VSCodeProjects\\github_jobs\\github_jobs\\src\\components\\JobsPagination.js",[],"C:\\Users\\User\\VSCodeProjects\\github_jobs\\github_jobs\\src\\components\\useFetchJobs.js",["27","28"],"import { useEffect, useReducer } from 'react'\r\n\r\nconst ACTIONS = {\r\n    REQUEST_DATA: 'request-data',\r\n    GET_DATA: 'get-data',\r\n    ERROR: 'error',\r\n    HAS_NEXT_PAGE: 'has_next_page'\r\n}\r\n\r\nconst BASE_URL = '/positions.json'\r\n\r\nfunction reducer(state, action) {\r\n    switch (action.type) {\r\n        case ACTIONS.REQUEST_DATA:\r\n            return { jobs: [], loading: true }\r\n\r\n        case ACTIONS.GET_DATA:\r\n            return { ...state, jobs: action.payload.jobs, loading: false }\r\n\r\n        case ACTIONS.ERROR:\r\n            return { ...state, jobs: [], loading: false, error: action.payload.error }\r\n\r\n        case ACTIONS.HAS_NEXT_PAGE:\r\n            return action.payload.jobs.length != 0 ? { ...state, hasNextPage: true } : { ...state, hasNextPage: false }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default function useFetchJobs(page, params) {\r\n    const [state, dispatch] = useReducer(reducer, { jobs: [], loading: false })\r\n    let searchParams = new URLSearchParams()\r\n    if (params.description != null)\r\n        searchParams.append('description', params.description)\r\n    if (params.location != null)\r\n        searchParams.append('location', params.location)\r\n\r\n    useEffect(() => {\r\n        dispatch({ type: ACTIONS.REQUEST_DATA })\r\n        fetch(`${BASE_URL}?page=${page}&${searchParams.toString()}`)\r\n            .then(res => res.json())\r\n            .then(data => dispatch({ type: ACTIONS.GET_DATA, payload: { jobs: data } }))\r\n            .catch(e => {\r\n                dispatch({ type: ACTIONS.ERROR, payload: { error: e } })\r\n            })\r\n\r\n        dispatch({ type: ACTIONS.REQUEST_DATA })\r\n        fetch(`${BASE_URL}?page=${page + 1}&${searchParams.toString()}`)\r\n            .then(res => res.json())\r\n            .then(data => dispatch({ type: ACTIONS.HAS_NEXT_PAGE, payload: { jobs: data } }))\r\n            .catch(e => {\r\n                dispatch({ type: ACTIONS.ERROR, payload: { error: e } })\r\n            })\r\n\r\n        return\r\n    }, [page, params])\r\n\r\n    return state\r\n}","C:\\Users\\User\\VSCodeProjects\\github_jobs\\github_jobs\\src\\components\\Jobs.js",["29"],"import React, { useState } from 'react'\r\nimport { Card, Button, Collapse, Badge } from 'react-bootstrap'\r\nimport ReactMarkdown from \"react-markdown\"\r\n\r\nexport default function Jobs({ job }) {\r\n    const [open, setOpen] = useState(false)\r\n\r\n    return (\r\n        <div>\r\n            < Card key={job.id} className='mb-3' >\r\n                <Card.Body className='d-flex justify-content-between'>\r\n                    <div>\r\n                        <Card.Title>\r\n                            {job.title}\r\n                        </Card.Title>\r\n                        <Card.Subtitle className='mb-3'>\r\n                            {job.location}\r\n                        </Card.Subtitle>\r\n                        <div style={{ wordBreak: 'break-all' }}>\r\n                            <ReactMarkdown children={job.how_to_apply} allowDangerousHtml='true'></ReactMarkdown>\r\n                        </div>\r\n                        <Badge className='bg-secondary mb-2'>{job.type}</Badge>\r\n                        <Card.Text>\r\n                            <Button variant=\"primary\" onClick={() => setOpen(!open)}>{open ? 'Hide' : 'Show'} Description</Button>\r\n                            <Collapse in={open}>\r\n                                <div className='mt-3'>\r\n                                    <ReactMarkdown children={job.description} allowDangerousHtml={true} />\r\n                                </div>\r\n                            </Collapse>\r\n                        </Card.Text>\r\n                    </div>\r\n                    <img className='d-none d-md-block' height='50' src={job.company_logo}></img>\r\n                </Card.Body>\r\n            </Card >\r\n        </div >\r\n    )\r\n}\r\n",{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":24,"column":47,"nodeType":"36","messageId":"37","endLine":24,"endColumn":49},{"ruleId":"38","severity":1,"message":"39","line":56,"column":8,"nodeType":"40","endLine":56,"endColumn":22,"suggestions":"41"},{"ruleId":"42","severity":1,"message":"43","line":32,"column":21,"nodeType":"44","endLine":32,"endColumn":91},"no-native-reassign",["45"],"no-negated-in-lhs",["46"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'searchParams'. Either include it or remove the dependency array.","ArrayExpression",["47"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"48","fix":"49"},"Update the dependencies array to be: [page, params, searchParams]",{"range":"50","text":"51"},[1987,2001],"[page, params, searchParams]"]